version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 10
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Building the Docker image...
      - docker build --build-arg DOCKER_ENV=$DOCKER_ENV -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG -f Dockerfile .
  post_build:
    commands:
      - echo Pushing the Docker images to container registry...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
      # - echo Build completed on `date`
artifacts:
  files:
    - appspec.yaml
    - taskdef.json
#   discard-paths: no
#   secondary-artifacts:
#     DefinitionArtifact:
#       files:
#         - appspec.yaml
#         - taskdef.json
#       discard-paths: no
#     ImageArtifact:
#       files:
#         - imageDetail.json
#       discard-paths: no

# cache:
#   paths:
#     - ~/.npm
#     - /node_modules/**/*
#     - /var/lib/docker/**/*
